#!/bin/bash
.  _sql

if [[ $# == 0 ]] 
then
echo "Usage:  db-audit-trail <user> [start time in mils] [owner]
    db-audit-trail U_APP_TEST_CPR_RW 1386088157142 UNIUS
    db-audit-trail U_APP_TEST_CPR_RW 1386088157142 
    db-audit-trail U_APP_TEST_CPR_RW
"
exit 1
fi

where_user="(T.USERNAME = '$1' OR T.CLIENT_ID = '$1')"

# this is not precise, but I don't care
[[ $2 ]]  && where_time=" extended_timestamp > 
	(select TO_TIMESTAMP_TZ('1970-01-01 GMT', 'YYYY-MM-DD TZR') + NUMTODSINTERVAL($2/1000/60, 'MINUTE') from dual) " || where_time=" 1=1"
	  		
[[ $3 ]] && where_owner=" T.OWNER='$3' " || where_owner=" 1=1" # just too lazy

_sql_statement="
	
	$sql_wide
	SET LONG 9999
	SET LONGCHUNKSIZE 9999
	--
	column SESSION_ENTRY_ID format a30
	column FQN format a50
	column APP_TRANSACTIONID format a35
	column ACTION_NAME format a3
	column STATEMENTID HEADING STMTID
	column MILS format 99999999999999
	
	SET TAB OFF
	SET COLSEP '	' 
	
	SET SQLBL ON

	WITH dba_at AS
	(SELECT /*+MATERIALIZE*/ y.*
  		FROM   (SELECT
					-- ------------------- TIME/ORDER -------------------------------
	 				extract(DAY FROM(t.extended_timestamp - TO_TIMESTAMP_TZ('1970-01-01 GMT', 'YYYY-MM-DD TZR'))) * 86400000 +
	 					TO_NUMBER(TO_CHAR(sys_extract_utc(t.extended_timestamp), 'SSSSSFF3')) AS mils
					,t.sessionid || '.' || t.entryid AS session_entry_id
	 				-- ------------------- IDs --------------------------------
					,t.sessionid
					,t.statementid
					 -- ------------------- USER and Client --------------------
					,t.username
					 -- ------------------- ACTION ------------------------------     
					,t.action_name
					 -- ------------------- OBJECT ------------------------------
					,t.owner
					,t.obj_name
					 -- ------------------- OTHER ------------------------------      
					,regexp_substr(SUBSTR(t.sql_text, 1, 100), 'transactionId: (.*) ', 1, 1, NULL, 1) AS app_transactionid
					,SUBSTR(t.sql_bind, 1, 50) || ' ..... ' || SUBSTR(t.sql_bind, -30) as sql_bind_preview
					,SUBSTR(t.sql_text, 1, 50) as sql_text_preview
					,t.extended_timestamp
				FROM   dba_audit_trail t
				WHERE  $where_user
				AND    $where_owner
				AND    $where_time 
		) y
	)
	SELECT 
		-- explicit list here to keep the original column order used by other tools
		x.mils
		,x.session_entry_id
		,x.sessionid
		,x.statementid
		,x.username
		,x.action_name
		,x.owner || '.' || x.obj_name AS FQN
		-- 
		,DECODE(o.type#
		 ,1,'INDEX'
		 ,2,'TABLE'
		 ,3,'CLUSTER'
		 ,4,'VIEW'
		 ,5,'SYNONYM'
		 ,6,'SEQUENCE'
		 ,7,'PROCEDURE'
		 ,8,'FUNCTION'
		 ,9,'PACKAGE'
		 ,12,'TRIGGER'
		 ,13,'TYPE'
		 ,22,'LIBRARY'
		 ,23,'DIRECTORY'
		 ,24,'QUEUE'
		 ,28,'JAVA SOURCE'
		 ,29,'JAVA CLASS'
		 ,30,'JAVA RESOURCE'
		 ,32,'INDEXTYPE'
		 ,33,'OPERATOR'
		 ,42,NVL((SELECT 'REWRITE EQUIVALENCE' 
		 		FROM sys.sum$ s 
		 		WHERE  s.obj# = o.obj# 
		 		AND BITAND(s.xpflags, 8388608) = 8388608) ,
		 	'MATERIALIZED VIEW'
		 	),'UNDEFINED'
		) AS "OBJECT_TYPE"
		-- 
		,x.app_transactionid 
		,x.sql_bind_preview
		,x.sql_text_preview
	FROM   dba_at x
	JOIN   sys.\"_CURRENT_EDITION_OBJ\" o
	ON     o.name = x.obj_name
	AND    o.type# IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 22, 28, 32, 42)
	JOIN   sys.user$ u
	ON     o.owner# = u.user#
	AND    u.name = x.owner
	
	ORDER  BY extended_timestamp DESC
	;
"

echo "$_sql_statement" 1>&2
echo "---------------------------------------------------------" 1>&2

# go
sql "$_sql_statement"


# http://docs.oracle.com/cd/B28359_01/server.111/b28320/dynviews_3120.htm